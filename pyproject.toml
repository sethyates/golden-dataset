[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "golden-dataset"
version = "0.1.0"
authors = [
    {name = "Seth Yates", email = "29878+sethyates@users.noreply.github.com"},
]
description = "Golden dataset management"
readme = "README.md"
requires-python = ">=3.12"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "importlib-metadata>=8.6.1",
    "importlib-resources>=6.5.2",
    "pydantic>=2.10.6",
    "pydantic-settings[toml]>=2.8.1",
    "rich>=13.9.4",
    "typer>=0.15.2",
]

[project.optional-dependencies]
async = [
    "anyio>=4.5.2",
]
cli = [
    "rich>=13.9.4",
    "typer>=0.15.2",
]
dev = [
    "mypy>=1.14.1",
    "pytest>=8.3.5",
    "pytest-cov>=5.0.0",
    "ruff>=0.9.9",
]
sqlalchemy = [
    "sqlalchemy>=2.0.38",
]
sqlmodel = [
    "sqlalchemy>=2.0.38",
    "sqlmodel>=0.0.23",
]


[project.urls]
"Homepage" = "https://github.com/sethyates/golden-dataset"
"Bug Tracker" = "https://github.com/sethyates/golden-dataset/issues"

[project.scripts]
golden = "golden_dataset.cli:app"

[tool.hatch.build.targets.wheel]
packages = ["src/golden_dataset"]

[tool.hatch.build.targets.sdist]
include = [
    "src/golden_dataset",
    "tests",
    "pyproject.toml",
    "README.md",
    "LICENSE",
]

[tool.ruff]
target-version = "py312"
line-length = 120
output-format = "concise"

# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".ruff_cache",
    ".venv",
    "__pypackages__",
    "build",
    "dist",
]

# Assume Python 3.8+
src = ["src", "tests"]

# Allow autofix for all enabled rules (when `--fix`) is provided.
[tool.ruff.lint]
fixable = ["ALL"]
unfixable = []
select = [
    # all pycodestyle
    "E",
    # all Pyflakes
    "F",
    # all pyupgrade
    "UP",
    # all refurb
    "FURB",
    # all flake8-bugbear
    "B",
    # all flake8-simplify
    "SIM",
    # all isort
    "I",
]
# Until we fix below, ignore below
ignore = [
    # Line too long
    "E501",
    # Do not perform function call `Depends` in argument defaults
    "B008",
]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pycodestyle]
max-line-length = 88

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-first-party = ["golden_dataset"]

[tool.ruff.format]
# Use single quotes for strings.
quote-style = "double"
# Indent with spaces, rather than tabs.
indent-style = "space"
# Respect line endings.
line-ending = "auto"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_incomplete_defs = true
check_untyped_defs = true
ignore_missing_imports = true
explicit_package_bases = true
warn_unreachable = true
exclude = [
    "examples/.*"
]

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[[tool.mypy.overrides]]
module = "examples.*"
ignore_errors = true

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
[dependency-groups]
async = [
    "anyio>=4.5.2",
]
cli = [
    "rich>=13.9.4",
    "typer>=0.15.2",
]
dev = [
    "mypy>=1.14.1",
    "pytest>=8.3.5",
    "pytest-cov>=5.0.0",
    "pytest-sugar>=1.0.0",
    "ruff>=0.9.9",
]
sqlalchemy = [
    "sqlalchemy>=2.0.38",
]
sqlmodel = [
    "sqlalchemy>=2.0.38",
    "sqlmodel>=0.0.23",
]

[tool.golden]
src = "examples"
datasets = "tests/data/golden"
generators = "db.datasets"
base-class = "db.models:Base"
engine = "db.models:engine"
session-factory = "db.models:Session"
